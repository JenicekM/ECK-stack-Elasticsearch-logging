--- 
apiVersion: batch/v1
kind: Job
metadata:
  name: c-logging-slm
  namespace: c-logging
  labels:
    k8s-app: c-logging-slm
    app.kubernetes.io/managed-by: iscp
    app.kubernetes.io/app-name: application_logging
    app.kubernetes.io/app-catalog: simple
    app.kubernetes.io/app-sla: 24x7
    app.kubernetes.io/app-management: application
    app.kubernetes.io/component: elasticsearch
    app.kubernetes.io/version: 8.17.0
spec:
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        k8s-app: c-logging-slm
    spec:
      securityContext:
        runAsUser: 1000
      serviceAccount: c-logging-ilm-slm
      containers:
      - name: c-logging-slm
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.12.2"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        args:
        - -c
        - |
          while ! curl -X GET "$ELASTICSEARCH_PROTOCOL://$ELASTICSEARCH_HOST:$ELASTICSEARCH_PORT/_cluster/health?wait_for_status=green&timeout=10s&pretty" \
                       -s -o /dev/null -k -u "elastic:$ELASTICSEARCH_PASSWORD"; do
            sleep 30
          done
          echo "Connection to ECK"
          rc=""
          while [ "$rc" != "200" ]; do
              rc=`curl -X PUT "$ELASTICSEARCH_PROTOCOL://$ELASTICSEARCH_HOST:$ELASTICSEARCH_PORT/_slm/policy/nightly-snapshots?pretty" \
                   -k -u "elastic:$ELASTICSEARCH_PASSWORD" \
                   -H'Content-Type: application/json' \
                   -d '{"schedule": "'"$SNAPSHOT_SCHEDULE"'","name": "<snapshot-{now/d}>","repository": "'"$SNAPSHOT_REPO_NAME"'","config": {"indices": ["*"]},"retention": {"expire_after": "'"$SNAPSHOT_RETENTION"'","min_count": 5,"max_count": 50}}' \
                   -s -o /dev/null -w %{http_code}`
              sleep 10
          done
          echo "Created nightly-snapshots"
        env:
        - name: ELASTICSEARCH_PROTOCOL
          value: "http"
        - name: ELASTICSEARCH_HOST
          value: "c-logging-elasticsearch-es-http.c-logging"
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: c-logging-elasticsearch-es-elastic-user

        # COS_ENDPOINT and COS_BUCKET vars need to be 
        # configured with required info
        # 
        # - name: COS_ENDPOINT
        #   value: {{ cosEndpoint }}
        # - name: COS_BUCKET
        #   value: {{ cosBucket }}
        #
        # Change 'SNAPSHOT_REPO_NAME' value to:
        #    - "backup_repo" if you are using NFS
        #    - "s3_repository" if you are using S3/COS
        #
        #
        - name: SNAPSHOT_REPO_NAME
          value: "{{ snapshotRepoName }}"
        #
        #
        - name: SNAPSHOT_SCHEDULE
          value: "{{ snapshotSchedule }}"
        - name: SNAPSHOT_RETENTION
          value: "{{ snapshotRetention }}"
        resources:
          limits:
            cpu: 400m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 56Mi
      restartPolicy: OnFailure