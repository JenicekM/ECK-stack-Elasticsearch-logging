unit-id: c-logging
description: "c-logging"
actions:
  - apply
  #- deploy
  #- update
  #- delete
  #- replace

deployment:

  - name: "Deploy c-logging namespace"
    state: disable
    deploy_dir: "ocp/default/ns"
    deploy_method: oc
    waitforseconds: 0
    targets:
      - name: <targetCluster>                                 # e.g. ibc-abc-dev-0003-k01
        namespace: c-logging
        targetId: <targetCluster>                             # e.g. ibc-abc-dev-0003-k01
        type: k8s_clusters
        waitforseconds: 0
    replace_vars:

      # Cluster definitions
      - name: "{{ k8sNamespace }}"
        value: "c-logging"

  - name: "Deploy c-logging namespace config"
    state: disable
    deploy_dir: "ocp/default/ns-config"
    deploy_method: oc
    waitforseconds: 0
    targets:
      - name: <targetCluster>                                 # e.g. ibc-abc-dev-0003-k01
        namespace: c-logging
        targetId: <targetCluster>                             # e.g. ibc-abc-dev-0003-k01
        type: k8s_clusters
        waitforseconds: 0
    replace_vars:

      # Cluster definitions
      - name: "{{ k8sNamespace }}"
        value: "c-logging"
        
      # ImagePullSecret
      - name: "{{ cCatalogBaseimagePullSecret }}"
        value: "{{ global.mf.imageRegistryNamespaces.c-catalog-base.name }}-cr-ro"
      - name: "{{ c-catalog-base-secretB64 }}"
        value: "vault://iscp/data/{{ global.instanceName }}/shared/registries/de-icr-io/{{ global.mf.imageRegistryNamespaces.c-catalog-base.name }}--secretRoB64"
      - name: "{{ dCoreBaseimagePullSecret }}"
        value: "{{ global.mf.imageRegistryNamespaces.d-core-base.name }}-cr-ro"
      - name: "{{ d-core-base-secretB64 }}"
        value: "vault://iscp/data/{{ global.instanceName }}/shared/registries/de-icr-io/{{ global.mf.imageRegistryNamespaces.d-core-base.name }}--secretRoB64"
      - name: "{{ imageInstanceLocation }}"
        value: "de.icr.io/{{ global.mf.imageRegistryNamespaces.c-catalog-base.name }}"

  - name: "Deploy c-logging storage"
    state: disable
    deploy_dir: "ocp/default/storage"
    deploy_method: oc
    waitforseconds: 0
    targets:
      - name: <targetCluster>                                 # e.g. ibc-abc-dev-0003-k01
        namespace: c-logging
        targetId: <targetCluster>                             # e.g. ibc-abc-dev-0003-k01
        type: k8s_clusters
        waitforseconds: 0
    replace_vars:

      # Cluster definitions
      - name: "{{ k8sNamespace }}"
        value: "c-logging"
      
      # Storage
      - name: "ocs-external-storagecluster-ceph-rbd"                   
        value: "[[ elasticsearchStorageClass ]]"
      - name: "20Gi"                    # Default: 100Gi
        value: "100Gi"
      - name: "ocs-external-storagecluster-ceph-rbd"             
        value: "[[ elasticsearchBackupStorageClass ]]"
      - name: "20Gi"              # Default: 100Gi
        value: "100Gi"
      - name: "ocs-external-storagecluster-ceph-rbd"                        
        value: "[[ logstashStorageClass ]]"
      - name: "5Gi"                         # Default: 5Gi
        value: "5Gi"

      # To be filled only with vanilla clusters
      # - name: "{{ nfsServer }}"                                    # NFS (for example: fsf-lon0201k-fz.service.softlayer.com)
      #   value: ""
      # - name: "{{ nfsShare }}"                                     # NFS data (for example: /IBM02SV1024007_7/data01)
      #   value: ""
      # - name: "{{ blockId }}"                                      # BlockId (for example: ibc-abc-dev-0003)
      #   value: ""
      # - name: "{{ k8sClusterId }}"                                 
      #   value: "<targetCluster>"

      # To be filled only with multizone clusters
      # - name: "{{ region }}"                                    # Region (for example: eu-de)
      #   value: ""
      # - name: "{{ zone1 }}"                                     # First availability zone (for example: fra02)
      #   value: ""
      # - name: "{{ zone2 }}"                                     # Second availability zone (for example: fra04)
      #   value: ""
      # - name: "{{ zone3 }}"                                     # Third availability zone (for example: fra06)
      #   value: "" 

  - name: "Deploy c-logging CRDs"
    state: disable
    deploy_dir: "ocp/default/crds"
    deploy_method: kubectl
    waitforseconds: 0
    targets:
      - name: <targetCluster>                                 # e.g. ibc-abc-dev-0003-k01
        namespace: c-logging
        targetId: <targetCluster>                             # e.g. ibc-abc-dev-0003-k01
        type: k8s_clusters
        waitforseconds: 0
    replace_vars:

      # Cluster definitions
      - name: "{{ k8sNamespace }}"
        value: "c-logging"

  - name: "Deploy c-logging stack"
    state: enable
    deploy_dir: "ocp/default/c-logging"
    deploy_method: oc
    waitforseconds: 0
    targets:
      - name: <targetCluster>                                 # e.g. ibc-abc-dev-0003-k01
        namespace: c-logging
        targetId: <targetCluster>                             # e.g. ibc-abc-dev-0003-k01
        type: k8s_clusters
        waitforseconds: 60 
    replace_vars:

      # Cluster definitions
      - name: "{{ k8sNamespace }}"
        value: "c-logging"
      - name: "{{ cCatalogBaseimagePullSecret }}"
        value: "{{ global.mf.imageRegistryNamespaces.c-catalog-base.name }}-cr-ro"
      - name: "{{ imageInstanceLocation }}"
        value: "de.icr.io/{{ global.mf.imageRegistryNamespaces.c-catalog-base.name }}"

      # ECK-Operator
      - name: "{{ eckOperatorImageName }}"
        value: "c-logging_eck-operator"  
      - name: "{{ eckOperatorImageTag }}"
        value: "2.16.1-1.10.0"

      # Elasticsearch
      - name: "{{ elasticImageName }}"
        value: "c-logging_elasticsearch"  
      - name: "{{ elasticImageTag }}"
        value: "8.17.0-1.10.0"

      # Limit resources
      - name: "3"
        value: "3"
      - name: "6Gi"
        value: "6Gi"
      - name: "1"
        value: "1"
      - name: "4Gi"
        value: "4Gi"
      - name: "500m"
        value: "500m"

      # To be filled only with multizone clusters
      # - name: "{{ zone1 }}"                                     # First availability zone (for example: fra02)
      #   value: ""
      # - name: "{{ zone2 }}"                                     # Second availability zone (for example: fra04)
      #   value: ""
      # - name: "{{ zone3 }}"                                     # Third availability zone (for example: fra04)
      #   value: ""  

      # Kibana
      - name: "{{ kibanaImageName }}"
        value: "c-logging_kibana"  
      - name: "{{ kibanaImageTag }}"
        value: "8.17.0-1.10.0"

      # Limit resources
      - name: "1Gi"
        value: "1Gi"
      - name: "500m"
        value: "500m"

      # OCP Route
      - name: "c-logging-kibana..apps.cluster-p2kf8.dynamic.redhatworkshops.io "
        value: c-logging-kibana.apps.<subDomain_default_OpenShift_Router>             #e.g c-logging-kibana.apps.onp-tst-tst-0002-k01.lab.domain

      # Logstash
      - name: "{{ busyboxImageName }}"
        value: "c-logging_busybox"  
      - name: "{{ busyboxImageTag }}"
        value: "1.36.0-1.8.0"
      - name: "{{ logstashImageName }}"
        value: "c-logging_logstash"  
      - name: "{{ logstashImageTag }}"
        value: "8.17.0-1.10.0"
      - name: "{{ logstashExporterImageName }}"
        value: "c-logging_logstash-exporter"  
      - name: "{{ logstashExporterImageTag }}"
        value: "1.6.2-1.9.0"

      # SIEM MF
      # - name: "{{ SiemHost }}"
      #   value: x-siem.{{ global.mt.instanceSubDomain }}.int.x-iscp.net
      # - name: "{{ SiemPort }}"
      #   value: "513"
      # - name: "{{ clusterName }}"
      #   value: "<targetCluster>"

      # Limit resources
      - name: "1Gi"
        value: "1Gi"
      - name: "500m"
        value: "500m"
      - name: "128Mi"
        value: "128Mi"
      - name: "100m"
        value: "100m"
      
      # Filebeat
      - name: "{{ filebeatImageName }}"
        value: "c-logging_filebeat"  
      - name: "{{ filebeatImageTag }}"
        value: "8.17.0-1.10.0"
      - name: "{{ beatExporterImageName }}"
        value: "c-logging_beats-exporter"  
      - name: "{{ beatExporterImageTag }}"
        value: "20230331-1.8.1"

      # Limit resources
      - name: "250Mi"
        value: "250Mi"
      - name: "200m"
        value: "200m"

      # Elasticsearch-exporter
      - name: "{{ elasticExporterImageName }}"
        value: "c-logging_elasticsearch-exporter"  
      - name: "{{ elasticExporterImageTag }}"
        value: "1.7.0-1.9.0"

      # Backup
      - name: "backup_repo"                            # Default: backup_repo
        value: "backup_repo"
      - name: ""0 30 2 * * ?""                            # Snapshot scheduling. Default: Every day at 4:00AM
        value: "0 30 2 * * ?"
      - name: "7d"                           # Snapshot retention. Default: 7 days
        value: "7d"

      # Vault paths used only with S3 backup
      # - name: "{{ cosEndpoint }}"                     # COS Enpoint to storage the backup
      #   value: "vault://iscp/data/{{ global.instanceName }}/<accountId>/<tenantId>/apps/c-logging-kibana--cosEndpoint"
      # - name: "{{ cosBucket }}"                       # COS Bucket name to storage the backup
      #   value: "vault://iscp/data/{{ global.instanceName }}/<accountId>/<tenantId>/apps/c-logging-kibana--cosBucket"
      # - name: "{{ cosAccessKey }}"                    # COS Access Key
      #   value: "vault://iscp/data/{{ global.instanceName }}/<accountId>/<tenantId>/apps/c-logging-kibana--cosAccessKeyB64"
      # - name: "{{ cosSecretKey }}"                    # COS Secret Key
      #   value: "vault://iscp/data/{{ global.instanceName }}/<accountId>/<tenantId>/apps/c-logging-kibana--cosSecretKeyB64"



